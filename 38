#include <stdio.h>
#include <stdlib.h>

#define DIRECTION_LEFT 0
#define DIRECTION_RIGHT 1

void sort(int arr[], int n) {
    int temp;
    for (int i = 0; i < n; ++i) {
        for (int j = i + 1; j < n; ++j) {
            if (arr[i] > arr[j]) {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}

int findNearestIndex(int arr[], int n, int head, int direction) {
    int index = -1;
    if (direction == DIRECTION_RIGHT) {
        for (int i = 0; i < n; ++i) {
            if (arr[i] >= head) {
                index = i;
                break;
            }
        }
    } else if (direction == DIRECTION_LEFT) {
        for (int i = n - 1; i >= 0; --i) {
            if (arr[i] <= head) {
                index = i;
                break;
            }
        }
    }
    return index;
}

void scan(int arr[], int n, int head, int direction) {
    int total_seek_time = 0;
    int index;
    int current_track = head;

    if (direction == DIRECTION_RIGHT) {
        index = findNearestIndex(arr, n, head, DIRECTION_RIGHT);
        if (index == -1) {
            direction = DIRECTION_LEFT;
            total_seek_time += abs(head);
            current_track = 0;
            index = findNearestIndex(arr, n, head, DIRECTION_LEFT);
        }
    } else if (direction == DIRECTION_LEFT) {
        index = findNearestIndex(arr, n, head, DIRECTION_LEFT);
        if (index == -1) {
            direction = DIRECTION_RIGHT;
            total_seek_time += abs(head - (arr[n - 1]));
            current_track = arr[n - 1];
            index = findNearestIndex(arr, n, head, DIRECTION_RIGHT);
        }
    }

    printf("Sequence of tracks visited:\n");
    printf("%d", head);

    while (index != -1) {
        total_seek_time += abs(current_track - arr[index]);
        printf(" -> %d", arr[index]);
        current_track = arr[index];
        index = (direction == DIRECTION_RIGHT) ? (index + 1) : (index - 1);
        if (index < 0 || index >= n)
            break;
    }

    printf("\nTotal seek time: %d\n", total_seek_time);
}

int main() {
    int n, head, direction;
    printf("Enter the number of requests: ");
    scanf("%d", &n);

    int arr[n];
    printf("Enter the requests: ");
    for (int i = 0; i < n; ++i) {
        scanf("%d", &arr[i]);
    }

    printf("Enter the initial head position: ");
    scanf("%d", &head);

    printf("Enter the direction (0 for left, 1 for right): ");
    scanf("%d", &direction);

    sort(arr, n);
    scan(arr, n, head, direction);

    return 0;
}
