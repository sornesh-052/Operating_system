#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

#define BUFFER_SIZE 5

int buffer[BUFFER_SIZE];
int itemCount = 0;
pthread_mutex_t mutex;

void *producer(void *arg) {
    int item = 0;
    while (1) {
        pthread_mutex_lock(&mutex);
        if (itemCount < BUFFER_SIZE) {
            buffer[itemCount++] = item;
            printf("Produced item: %d\n", item++);
        }
        pthread_mutex_unlock(&mutex);
    }
}

void *consumer(void *arg) {
    while (1) {
        pthread_mutex_lock(&mutex);
        if (itemCount > 0) {
            printf("Consumed item: %d\n", buffer[--itemCount]);
        }
        pthread_mutex_unlock(&mutex);
    }
}

int main() {
    pthread_t producerThread, consumerThread;

    pthread_mutex_init(&mutex, NULL);

    pthread_create(&producerThread, NULL, producer, NULL);
    pthread_create(&consumerThread, NULL, consumer, NULL);

    pthread_join(producerThread, NULL);
    pthread_join(consumerThread, NULL);

    pthread_mutex_destroy(&mutex);

    return 0;
}
