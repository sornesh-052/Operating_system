#include <stdio.h>

#define MAX_FRAMES 3
#define MAX_PAGES 20

void fifo(int pages[], int n) {
    int frames[MAX_FRAMES];
    int frame_count = 0;
    int page_faults = 0;
    int frame_index = 0;
    int i, j;

    // Initialize frames with -1 indicating empty frame
    for (i = 0; i < MAX_FRAMES; i++) {
        frames[i] = -1;
    }

    printf("Page\t Frames\n");
    for (i = 0; i < n; i++) {
        printf("%d\t", pages[i]);

        int page_found = 0;
        for (j = 0; j < MAX_FRAMES; j++) {
            if (frames[j] == pages[i]) {
                page_found = 1;
                break;
            }
        }

        if (!page_found) {
            if (frame_count < MAX_FRAMES) {
                frames[frame_index++] = pages[i];
                frame_count++;
            } else {
                frames[frame_index] = pages[i];
                frame_index = (frame_index + 1) % MAX_FRAMES;
            }
            page_faults++;
        }

        for (j = 0; j < MAX_FRAMES; j++) {
            printf("%d\t", frames[j]);
        }
        printf("\n");
    }

    printf("\nTotal Page Faults: %d\n", page_faults);
}

int main() {
    int pages[MAX_PAGES] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3, 2, 1, 2, 0, 1, 7, 0, 1};
    int n = sizeof(pages) / sizeof(pages[0]);

    fifo(pages, n);

    return 0;
}
